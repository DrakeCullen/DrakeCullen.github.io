{"version":3,"sources":["Components/Constants.js","Components/HomeScreen.js","Components/Player.js","Components/Cloud.js","Components/LiveGame.js","Components/GameState.js","App.js","reportWebVitals.js","index.js"],"names":["WIDTH","HEIGHT","BOTTOM","window","innerHeight","LEFT","innerWidth","RIGHT","X_START","Y_START","HomeScreen","props","className","style","width","Constants","height","type","onClick","this","startGame","React","Component","Player","position","backgroundColor","borderRadius","border","left","x","bottom","y","Cloud","clouds","map","data","right","LiveGame","onKeyDown","e","keyCode","state","setState","cloudCollision","counter","gravity","console","log","gravityUpdate","bind","initialize","mousePos","setInterval","document","onkeydown","xMin","Math","ceil","xMax","floor","i","xRand","random","yRand","push","cloud","gameOver","newCloud","GameState","playing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22c4d214.chunk.js","sourcesContent":["export const WIDTH = 800;\nexport const HEIGHT = 600;\nexport const BALL_RADIUS = 20;\nexport const CLOUD_WIDTH = 80;\nexport const CLOUD_HEIGHT = 20;\nexport const BOTTOM = window.innerHeight - HEIGHT;\nexport const LEFT = window.innerWidth/2 - WIDTH/2;\nexport const RIGHT = window.innerWidth/2 + WIDTH/2;\nexport const X_START = window.innerWidth/2;\nexport const Y_START = BOTTOM + HEIGHT/2;\nexport const GRAVITY = 0.6;\n","import React, { Component } from 'react';\nimport * as Constants from './Constants.js';\n\nclass HomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"game-area\" style={{ width: Constants.WIDTH, height: Constants.HEIGHT }}>\n                <div className=\"text-center\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.startGame}>Play</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomeScreen","import React, { Component } from 'react'\nimport * as Constants from './Constants.js';\nimport LiveGame from './LiveGame.js'\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n    render() {\n        return (\n            //<div className=\"golf-ball\" style={{ top: this.state.y, left: this.state.x, width: Constants.BALL_RADIUS, height: Constants.BALL_RADIUS }}></div>\n            <div style={{\n                position: 'absolute',\n                backgroundColor: 'white',\n                borderRadius: '25px',\n                border: '2px solid black',\n                width: `${Constants.BALL_RADIUS}px`,\n                height: `${Constants.BALL_RADIUS}px`,\n                left: `${this.props.x}px`,\n                bottom: `${this.props.y}px`\n            }}>\n                \n            </div>\n            \n        );\n    }\n\n   \n}\n\nexport default Player","import React, { Component } from 'react'\nimport * as Constants from './Constants.js';\nimport LiveGame from './LiveGame.js'\n\nclass Cloud extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n            const cloudDivs = this.props.clouds.map((data) => <div key={data[0].left + data[1].right} style={{\n                position: 'absolute',\n                backgroundColor: '#C1BEBA',\n                borderRadius: '25px',\n                width: `${Constants.CLOUD_WIDTH}px`,\n                height: Constants.CLOUD_HEIGHT,\n                left: `${data[0].left}px`,\n                bottom: `${data[1].right}px`\n            }}></div>);\n\n            return (\n                    cloudDivs\n            );\n        \n    }\n\n\n}\n\nexport default Cloud","import React, { Component } from 'react'\nimport * as Constants from './Constants.js';\nimport Player from './Player.js';\nimport Cloud from './Cloud.js';\n\nclass LiveGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clouds = []\n        this.counter = 0\n        this.state = { x: Constants.X_START, y: Constants.Y_START, gravity: Constants.GRAVITY };\n        console.log(Constants.BOTTOM, Constants.Y_START)\n        this.gravityUpdate = this.gravityUpdate.bind(this);\n        this.initialize();\n    }\n\n    render() {\n        return (\n            <div className=\"game-area\" style={{ width: Constants.WIDTH, height: Constants.HEIGHT }} onClick={this.mousePos}>\n                <Cloud clouds={this.clouds} />\n                <Player x={this.state.x} y={this.state.y} />\n            </div>\n        );\n    }\n    componentDidMount() {\n        setInterval(this.gravityUpdate, 5);\n        document.onkeydown = this.onKeyDown;\n\n    }\n\n    onKeyDown = (e) => {\n        if (e.keyCode == '37' && this.state.x > Constants.LEFT) \n            this.setState((state, props) => ({ x: state.x - 20 }));\n        else if (e.keyCode == '39' && this.state.x < Constants.RIGHT - Constants.BALL_RADIUS) \n            this.setState((state, props) => ({ x: state.x + 20 }));\n        else if (e.keyCode == '32')\n            this.cloudCollision();\n    }\n\n\n    initialize() {\n        let xMin = Math.ceil(window.innerWidth / 2 - Constants.WIDTH / 2);\n        let xMax = Math.floor(window.innerWidth / 2 + Constants.WIDTH / 2 - Constants.CLOUD_WIDTH);\n        for (let i = 0; i < 10; i++) {\n            let xRand = Math.floor(Math.random() * (xMax - xMin) + xMin);\n            let yRand = Math.floor(Math.random() * (window.innerHeight - Constants.BOTTOM - 100) + Constants.BOTTOM)\n            this.clouds.push([{ 'left': xRand }, { 'right': yRand }]);\n        }\n        for (let cloud of this.clouds) {\n            console.log(cloud[0].left, cloud[1].right)\n        }\n        this.xMin = xMin;\n        this.xMax = xMax;\n    }\n\n    gravityUpdate(e) {\n        if(this.counter == 0)\n            this.setState((state, props) => ({ y: state.y - state.gravity }));\n        else {\n            this.setState((state, props) => ({ y: state.y + state.gravity*3 }));\n            for (let cloud of this.clouds) { \n                cloud[1].right--;\n                if(cloud[1].right < Constants.BOTTOM)\n                    cloud[1].right = window.innerHeight + Constants.CLOUD_HEIGHT;  \n            }\n            this.counter--;\n        }\n        this.gameOver();\n    }\n\n    gameOver() {\n        if (this.state.y <= Constants.BOTTOM)\n            this.setState((state, props) => ({ gravity: 0 }));\n    }\n\n    cloudCollision() {\n        for (let cloud of this.clouds) {\n            if (this.state.x >= cloud[0].left - Constants.BALL_RADIUS && this.state.x <= cloud[0].left + Constants.CLOUD_WIDTH && this.state.y >= cloud[1].right - Constants.CLOUD_HEIGHT && this.state.y <= cloud[1].right + Constants.CLOUD_HEIGHT)\n                this.newCloud(cloud);\n          //  if (Math.abs(this.state.y - cloud[1].right) > 300)\n              //  this.newCloud(cloud);\n        }\n    }\n\n    newCloud(cloud) {\n        this.counter = 150;\n        let yRand = Math.floor(Math.random() * (window.innerHeight - Constants.BOTTOM - 100) + Constants.BOTTOM);\n        let xRand = Math.floor(Math.random() * (this.xMax - this.xMin) + this.xMin);\n        cloud[0].left = xRand;\n        cloud[1].right = yRand;\n    }\n\n}\n\nexport default LiveGame","import React, { Component } from 'react';\nimport HomeScreen from './HomeScreen.js'\nimport LiveGame from './LiveGame.js';\nimport * as Constants from './Constants.js';\n\nclass GameState extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { playing: false };\n        this.startGame = this.startGame.bind(this);\n    }\n\n    render() {\n        const playing = this.state.playing\n        if (!playing) {\n            return(<HomeScreen startGame={this.startGame}/>);\n        } else {\n            return (<LiveGame />);\n        }\n    }\n\n    startGame() {\n        this.setState({ playing: true });\n        console.log(this.state.playing)\n      }\n}\n\nexport default GameState","import React, { Component } from 'react';\nimport GameState from './Components/GameState.js'\n\nfunction App() {\n  return (\n    <GameState />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}